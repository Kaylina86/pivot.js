var pivot = function () { "use strict"; function l(o) { n = [], r = [], i = {}, e = {}, t = {}; s = { rowLabels: {}, columnLabels: {}, summaries: {} }; if (o === undefined) o = {}; if (o.fields !== undefined) I(o.fields); if (o.filters !== undefined) P(o.filters); if (o.rowLabels !== undefined) ft(o.rowLabels); if (o.columnLabels !== undefined) lt(o.columnLabels); if (o.summaries !== undefined) ct(o.summaries); if (o.currencySymbolField !== undefined) u = o.currencySymbolField; if (o.defaultCurrencySymbol !== undefined) f = o.defaultCurrencySymbol; if (o.csv !== undefined) k(o.csv); if (o.json !== undefined) C(o.json); return pivot } function c() { return l() } function h(e) { var n; if (e === undefined) n = q(); else if (e === false) n = "Pass showFields as true in order to view fields here."; return { fields: n, filters: t, rowLabels: S(s.rowLabels), columnLabels: S(s.columnLabels), summaries: S(s.summaries) } } function p() { return { pad: d, padRight: v, padLeft: m, formatDate: g, formatTime: y, isArray: b, isRegExp: w, shallowClone: E, objectKeys: S, objectType: x, sortNumerically: T } } function d(e, t, n, r) { if (r === undefined) r = " "; t = t.toString(); r = r.toString(); while (t.length < n) { if (e === "left") t = r + t; else t = t + r } return t } function v(e, t, n) { return d("right", e, t, n) } function m(e, t, n) { return d("left", e, t, n) } function g(e) { return e.getUTCFullYear() + "-" + m(e.getUTCMonth() + 1, 2, "0") + "-" + m(e.getUTCDate(), 2, "0") } function y(e) { return g(e) + " " + m(e.getUTCHours(), 2, "0") + ":" + m(e.getUTCMinutes(), 2, "0") } function b(e) { if (!Array.isArray) return x(e) == "array"; else return Array.isArray(e) } function w(e) { return x(e) == "regexp" } function E(e) { var t = {}; for (var n in e) { if (e.hasOwnProperty(n)) t[n] = e[n] } return t } function S(e) { if (Object.keys) return Object.keys(e); var t = []; for (key in e) { t.push(key) } return t } function x(e) { return {}.toString.call(e).match(/\s([a-z|A-Z]+)/)[1].toLowerCase() } function T(e) { return e.sort(function (e, t) { return e - t }) } function N(t) { var n = []; var r = {}, i = -1, s = t.length; while (++i < s) { var o = e[t[i]]; if (o === undefined) o = K(t[i]); n.push(o) } return n } function C(e) { var t, r = U("pseudo"); if (x(e) === "string") e = JSON.parse(e); n = []; var i = {}, s = -1, o = e.length; while (++s < o) { if (s === 0) t = N(e[s]); else n.push(A(e[s], t, r)) } } function k(e) { var t, r = U("pseudo"); n = L(e, function (e, n) { if (n === 0) t = N(e); else return A(e, t, r) }) } function L(e, t) { function f() { if (s.lastIndex >= e.length) return r; if (a) { a = false; return n } var t = s.lastIndex; if (e.charCodeAt(t) === 34) { var i = t; while (i++ < e.length) { if (e.charCodeAt(i) === 34) { if (e.charCodeAt(i + 1) !== 34) break; i++ } } s.lastIndex = i + 2; var o = e.charCodeAt(i + 1); if (o === 13) { a = true; if (e.charCodeAt(i + 2) === 10) s.lastIndex++ } else if (o === 10) { a = true } return e.substring(t + 1, i).replace(/""/g, '"') } var u = s.exec(e); if (u) { a = u[0].charCodeAt(0) !== 44; return e.substring(t, u.index) } s.lastIndex = e.length; return e.substring(t) } var n = {}, r = {}, i = [], s = /\r\n|[,\r\n]/g, o = 0, u, a; s.lastIndex = 0; while ((u = f()) !== r) { var l = []; while (u !== n && u !== r) { l.push(u); u = f() } if (t && !(l = t(l, o++))) continue; i.push(l) } return i } function A(e, t, n) { var r = {}, i = -1, s = t.length; while (++i < s) { var o = et(t[i].name, e[i]); r[t[i].name] = o } i = -1; while (++i < s) { var u = t[i].name; Q(u, r[u], r) } i = -1, s = n.length; while (++i < s) { var a = n[i], o = et(a.name, a.pseudoFunction(r, a)); r[a.name] = o; Q(a.name, o, r) } return r } function O(e) { var t = { all: D, set: P, apply: H, add: _ }; if (e !== undefined) { return t[e] } else { return t } } function M(e) { if (e === undefined) e = t; var n; for (n in e) { if (e.hasOwnProperty(n)) if (w(e[n])) { } else if (b(e[n])) { var r = -1, i = e[n].length; while (++r < i) { e[n][r] = et(n, e[n][r]) } } else { e[n] = et(n, e[n]) } } } function _(e) { for (var n in e) { if (e.hasOwnProperty(n)) t[n] = e[n] } M() } function D() { return t } function P(e) { t = e; pt(); M() } function H(e) { var s = r, o = []; if (e !== undefined) P(e); var u = j(); if (u) { s = r } else { s = n } var a = s.length, f = S(t).length, l = -1; while (++l < a) { var c = s[l], h = 0; for (var p in t) { if (t.hasOwnProperty(p) && c.hasOwnProperty(p) && B(t[p], c[p])) h += 1 } if (h === f) { o.push(c) } } r = o; i = E(t); pt(); return r } function B(e, t) { if (b(e)) { var n = -1, r = e.length; while (++n < r) { if (e[n] === t) return true } } else if (w(e)) { return e.test(t) } else { return t === e } return false } function j() { var e = 0, n = S(i).length; for (var r in i) { if (i.hasOwnProperty(r) && i.hasOwnProperty(r) && t[r] === i[r]) e += 1 } return n > 0 && e >= n } function F(e) { var t = { columnLabelable: U("columnLabelable"), rowLabelable: U("rowLabelable"), summarizable: U("summarizable"), filterable: U("filterable"), pseudo: U("pseudo"), clone: q, add: K, all: R, set: I, get: z }; if (e !== undefined) { return t[e] } else { return t } } function I(t) { e = {}; var n = -1, r = t.length; while (++n < r) { K(t[n]) } } function q() { var t = []; for (var n in e) { var r = {}; for (var i in e[n]) { if (e[n].hasOwnProperty(i) && i !== "values") r[i] = e[n][i] } t.push(r) } return t } function R() { var t = []; for (var n in e) { if (e.hasOwnProperty(n)) t[e[n].index] = e[n] } return t } function U(t) { var n = []; for (var r in e) { if (e.hasOwnProperty(r) && e[r][t] === true) n.push(e[r]) } return n } function z(t) { return e[t] } function W(e, t) { var n = 0, r = -1, i = e.length, s = null; if (t.type == "currency" && u != null) { s = e[0][u] } while (++r < i) { var o = e[r]; if (s != null && s != o[u]) { n = "Mutiple-Currency-Error"; break } else { n += o[t.dataSource] } } return n } function X(e, t) { var n = null, r = -1, i = e.length, s = null; if (t.type == "currency" && u != null) { s = e[0][u] } while (++r < i) { var o = e[r]; if (s != null && s != o[u]) { n = "Mutiple-Currency-Error"; break } else { var a = o[t.dataSource]; if (n === null) n = a; if (a < n) n = a } } return n } function V(e, t) { var n = null, r = -1, i = e.length, s = null; if (t.type == "currency" && u != null) { s = e[0][u] } while (++r < i) { var o = e[r]; if (s != null && s != o[u]) { n = "Mutiple-Currency-Error"; break } else { var a = o[t.dataSource]; if (n === null) n = a; if (a > n) n = a } } return n } function $(e, t) { var n = W(e, t); if (n != "Mutiple-Currency-Error") { n = n / e.length } return n } function J(e, t) { return e.length } function K(t) { if (x(t) === "string") t = { name: t }; if (t.type === undefined) t.type = "string"; if (t.pseudo === undefined) t.pseudo = false; if (t.rowLabelable === undefined) t.rowLabelable = true; if (t.columnLabelable === undefined) t.columnLabelable = false; if (t.filterable === undefined) t.filterable = false; if (t.dataSource === undefined) t.dataSource = t.name; if (t.summarizable && (t.rowLabelable || t.columnLabelable || t.filterable)) { var n = E(t); n.rowLabelable = false; n.filterable = false; n.dataSource = t.name; if (n.summarizable !== true) n.name = n.name + "_" + n.summarizable; else n.name = n.name + "_count"; K(n); t.summarizable = false; t.summarizeFunction = undefined } else if (t.summarizable) { if (t.summarizeFunction === undefined) { switch (t.summarizable) { case "sum": t.summarizeFunction = W; break; case "avg": t.summarizeFunction = $; break; case "min": t.summarizeFunction = X; break; case "max": t.summarizeFunction = V; break; default: t.summarizeFunction = J; break } t.summarizable = true } } else { t.summarizable = false } if (t.pseudo && t.pseudoFunction === undefined) t.pseudoFunction = function (e) { return "" }; if (t.displayFunction === undefined) t.displayFunction = G; t.values = {}; t.displayValues = {}; t.index = S(e).length; e[t.name] = t; return t } function Q(t, n, r) { if (e[t] === undefined || e[t].filterable === false) return; if (e[t].values[n] === undefined) { e[t].values[n] = { count: 1, displayValue: e[t].displayFunction(n, t, r) } } else { e[t].values[n].count += 1 } } function G(t, n, r) { var i; if (x(n) === "string") i = e[n]; if (i === undefined) i = K(n); switch (i.type) { case "cents": return Y(t / 100, i, r); case "currency": return Y(t, i, r); case "date": return g(new Date(t)); case "time": return y(new Date(t)); default: return t } } function Y(e, t, n) { var r = n; if (Object.prototype.toString.call(r.rows) === "[object Array]") { r = r.rows[0] } var i = r[u]; if (i === undefined) { i = f } if (Z(e)) { e = e.toFixed(2) } return i + e } function Z(e) { return !isNaN(parseFloat(e)) && isFinite(e) } function et(t, n) { var r, i; if (x(t) === "string") r = e[t]; if (r === undefined) r = K(t); switch (r.type) { case "integer": case "cents": if (x(n) === "number") return n; else return parseInt(n, 10); case "float": case "currency": if (x(n) === "number") return n; else return parseFloat(n, 10); case "date": case "time": switch (x(n)) { case "number": case "date": return n; default: if (/^\d+$/.test(n)) return parseInt(n); else return Date.parse(n) }; default: return n.toString() } } function tt(e) { var t = { raw: n, all: r }; if (e !== undefined) { return t[e] } else { return t } } function nt() { return { all: rt, rowLabels: it, columnLabels: st, summaries: ot } } function rt() { return s } function it() { return { set: ft, get: s.rowLabels } } function st() { return { set: lt, get: s.columnLabels } } function ot() { return { set: ct, get: s.summaries } } function ut(t, n) { if (x(n) === "string") n = e[n]; pt(); s[t][n.name] = n } function at(e, t) { s[e] = {}; pt(); var n = -1, r = t.length; while (++n < r) { ut(e, t[n]) } } function ft(e) { at("rowLabels", e) } function lt(e) { at("columnLabels", e) } function ct(e) { at("summaries", e) } function ht() { return { all: dt, columns: Et } } function pt() { o = undefined; a = undefined } function dt() { if (o !== undefined && a !== undefined) return wt(); H(); o = {}; a = []; vt(); if (S(s.columnLabels).length > 0) mt(); else { St(); yt() } return wt() } function vt() { var t = -1, n = r.length, i; while (++t < n) { var u = r[t], f = ""; for (var l in s.rowLabels) { if (s.rowLabels.hasOwnProperty(l)) { if (t === 0) a.push({ fieldName: l, width: 1, type: "row" }); f += l + ":" + u[l] + "|" } } if (o[f] === undefined) { o[f] = {}; for (var l in s.rowLabels) { if (s.rowLabels.hasOwnProperty(l)) o[f][l] = e[l].displayFunction(u[l], l, u) } o[f].rows = [] } o[f].rows.push(u) } } function mt() { for (var t in s.columnLabels) { if (s.columnLabels.hasOwnProperty(t)) { var n = {}; for (var r in o) { var i = gt(o[r].rows, e[t]); for (var u in i) { if (n[u] === undefined) n[u] = 1; else n[u] += 1; o[r][u] = bt(i[u]) } } xt(t, n) } } return o } function gt(e, t) { var n = -1, r = e.length, i = {}; while (++n < r) { var s = e[n][t.name]; if (i[s] === undefined) i[s] = { rows: [] }; i[s].rows.push(e[n]) } return i } function yt() { for (var e in o) { bt(o[e]) } return o } function bt(t) { var n = {}; for (var r in s.summaries) { if (s.summaries.hasOwnProperty(r)) { t[r] = e[r].summarizeFunction(t.rows, e[r]); t[r] = e[r].displayFunction(t[r], r, t) } } return t } function wt() { var e = [], t = S(o).sort(), n = -1, r = t.length; while (++n < r) { e.push(o[t[n]]) } return e } function Et() { if (o === undefined || a === undefined) dt(); return a } function St() { for (var e in s.summaries) { if (s.summaries.hasOwnProperty(e)) a.push({ fieldName: e, width: 1, type: "summary" }) } return a } function xt(t, n) { var r = S(n).sort(e[t].sortFunction), i = -1, o = r.length, u = S(s.summaries).length; while (++i < o) { a.push({ fieldName: r[i], width: u, type: "column" }) } return a } var e, t, n, r, i, s, o, u, a; var f = "$"; l(); return { init: l, reset: c, config: h, utils: p, csv: k, json: C, data: tt, results: ht, fields: F, filters: O, display: nt } }()